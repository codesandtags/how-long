{"version":3,"sources":["components/timer/Timer.js","containers/App.js","logo.svg","reportWebVitals.js","index.js"],"names":["getCalculateTime","initialTime","initial","dayjs","diff","duration","useState","calculateTime","setCalculateTime","useEffect","setInterval","className","format","years","months","days","hours","minutes","seconds","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAMMA,EAAmB,SAACC,GACxB,IAAIC,EAAUC,EAAMF,GAIpB,OAHUE,IACWC,KAAKF,IAKb,cAAsB,IAAnBD,EAAkB,EAAlBA,YAChBE,SAAaE,KADqB,MAEQC,mBACxCH,WAAeH,EAAiBC,GAAc,iBAHd,mBAE3BM,EAF2B,KAEZC,EAFY,KAclC,OARAC,qBAAU,WACRC,aAAY,WACVF,EACEL,WAAeH,EAAiBC,GAAc,mBAE/C,OACF,IAGD,sBAAKU,UAAU,QAAf,UACE,qBAAKA,UAAU,eAAf,SACE,uBAAMA,UAAU,iBAAhB,mDACoB,6CADpB,MACgD,IAC7CR,EAAMF,GAAaW,OAAO,yBAG/B,sBAAKD,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,mBACA,sBAAMA,UAAU,eAAhB,SAAgCJ,EAAcM,aAEhD,sBAAKF,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,oBACA,sBAAMA,UAAU,eAAhB,SAAgCJ,EAAcO,cAEhD,sBAAKH,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,kBACA,sBAAMA,UAAU,eAAhB,SAAgCJ,EAAcQ,YAEhD,sBAAKJ,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,mBACA,sBAAMA,UAAU,eAAhB,SAAgCJ,EAAcS,aAEhD,sBAAKL,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,qBACA,sBAAMA,UAAU,eAAhB,SAAgCJ,EAAcU,eAEhD,sBAAKN,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,qBACA,sBAAMA,UAAU,eAAhB,SAAgCJ,EAAcW,mBC1CvCC,GChBA,I,MDKH,WACV,OACE,qBAAKR,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,uDACA,cAAC,EAAD,CAAOV,YAAY,+BEEZmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dd58de9c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport duration from \"dayjs/plugin/duration\";\nimport * as dayjs from \"dayjs\";\n\nimport \"./Timer.css\";\n\nconst getCalculateTime = (initialTime) => {\n  let initial = dayjs(initialTime);\n  let now = dayjs();\n  let difference = now.diff(initial);\n\n  return difference;\n};\n\nexport default ({ initialTime }) => {\n  dayjs.extend(duration);\n  const [calculateTime, setCalculateTime] = useState(\n    dayjs.duration(getCalculateTime(initialTime), \"milliseconds\")\n  );\n\n  useEffect(() => {\n    setInterval(() => {\n      setCalculateTime(\n        dayjs.duration(getCalculateTime(initialTime), \"milliseconds\")\n      );\n    }, 1000);\n  }, []);\n\n  return (\n    <div className=\"Timer\">\n      <div className=\"Timer__block\">\n        <span className=\"Timer__summary\">\n          I arrived to ðŸ‡¨ðŸ‡¦ <strong>Toronto</strong> on{\" \"}\n          {dayjs(initialTime).format(\"YYYY/MM/DD HH:MM\")}\n        </span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">Years</span>\n        <span className=\"Timer__value\">{calculateTime.years()}</span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">Months</span>\n        <span className=\"Timer__value\">{calculateTime.months()}</span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">Days</span>\n        <span className=\"Timer__value\">{calculateTime.days()}</span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">Hours</span>\n        <span className=\"Timer__value\">{calculateTime.hours()}</span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">Minutes</span>\n        <span className=\"Timer__value\">{calculateTime.minutes()}</span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">Seconds</span>\n        <span className=\"Timer__value\">{calculateTime.seconds()}</span>\n      </div>\n    </div>\n  );\n};\n","import Timer from \"../components/timer/Timer\";\n\nimport logo from \"../logo.svg\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>How long have I been?</h1>\n        <Timer initialTime=\"2021-02-17 16:00:00\" />\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}