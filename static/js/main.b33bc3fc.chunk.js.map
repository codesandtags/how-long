{"version":3,"sources":["components/timer/Timer.js","containers/toronto/Toronto.js","containers/churrita/Churrita.js","containers/App.js","reportWebVitals.js","index.js"],"names":["getCalculateTime","initialTime","isCountdown","initial","dayjs","now","diff","description","duration","useState","calculateTime","setCalculateTime","useEffect","setInterval","setTimeout","confetti","particleCount","spread","startVelocity","className","format","years","months","days","hours","minutes","seconds","Toronto","Churrita","App","useHistory","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sVAOMA,EAAmB,SAACC,EAAaC,GACrC,IAAIC,EAAUC,EAAMH,GAChBI,EAAMD,IAGV,OAFiBF,EAAcC,EAAQG,KAAKD,GAAOA,EAAIC,KAAKH,IAK/C,cAAgD,IAA7CF,EAA4C,EAA5CA,YAAaM,EAA+B,EAA/BA,YAAaL,EAAkB,EAAlBA,YAC1CE,SAAaI,KAD+C,MAElBC,mBACxCL,WAAeJ,EAAiBC,EAAaC,GAAc,iBAHD,mBAErDQ,EAFqD,KAEtCC,EAFsC,KAyB5D,OAnBAC,qBAAU,WACRC,aAAY,WACVF,EACEP,WACEJ,EAAiBC,EAAaC,GAC9B,mBAGH,KAEHY,YAAW,WACTC,YAAS,CACPC,cAAe,IACfC,OAAQ,IACRC,cAAe,OAEhB,OACF,IAGD,sBAAKC,UAAU,QAAf,UACE,qBAAKA,UAAU,eAAf,SACE,uBAAMA,UAAU,iBAAhB,UACGZ,EACAH,EAAMH,GAAamB,OAAO,yBAG/B,sBAAKD,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,mBACA,sBAAMA,UAAU,eAAhB,SAAgCT,EAAcW,aAEhD,sBAAKF,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,oBACA,sBAAMA,UAAU,eAAhB,SAAgCT,EAAcY,cAEhD,sBAAKH,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,kBACA,sBAAMA,UAAU,eAAhB,SAAgCT,EAAca,YAEhD,sBAAKJ,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,mBACA,sBAAMA,UAAU,eAAhB,SAAgCT,EAAcc,aAEhD,sBAAKL,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,qBACA,sBAAMA,UAAU,eAAhB,SAAgCT,EAAce,eAEhD,sBAAKN,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,qBACA,sBAAMA,UAAU,eAAhB,SAAgCT,EAAcgB,mBClDvCC,G,MAdC,WACd,OACE,qBAAKR,UAAU,UAAf,SACE,yBAAQA,UAAU,kBAAlB,UACE,uDACA,cAAC,EAAD,CACElB,YAAY,sBACZM,YAAY,6DCQPqB,G,MAfE,WACf,OACE,qBAAKT,UAAU,WAAf,SACE,yBAAQA,UAAU,mBAAlB,UACE,qDACA,cAAC,EAAD,CACElB,YAAY,sBACZM,YAAY,0DACZL,aAAW,WCMN2B,EAbH,WACMC,cAEhB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWL,IACzC,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,WAAWC,UAAWN,UCFjCO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b33bc3fc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport duration from \"dayjs/plugin/duration\";\nimport * as dayjs from \"dayjs\";\nimport confetti from \"canvas-confetti\";\n\nimport \"./Timer.css\";\n\nconst getCalculateTime = (initialTime, isCountdown) => {\n  let initial = dayjs(initialTime);\n  let now = dayjs();\n  let difference = isCountdown ? initial.diff(now) : now.diff(initial);\n\n  return difference;\n};\n\nexport default ({ initialTime, description, isCountdown }) => {\n  dayjs.extend(duration);\n  const [calculateTime, setCalculateTime] = useState(\n    dayjs.duration(getCalculateTime(initialTime, isCountdown), \"milliseconds\")\n  );\n\n  useEffect(() => {\n    setInterval(() => {\n      setCalculateTime(\n        dayjs.duration(\n          getCalculateTime(initialTime, isCountdown),\n          \"milliseconds\"\n        )\n      );\n    }, 1000);\n\n    setTimeout(() => {\n      confetti({\n        particleCount: 200,\n        spread: 100,\n        startVelocity: 40,\n      });\n    }, 1000);\n  }, []);\n\n  return (\n    <div className=\"Timer\">\n      <div className=\"Timer__block\">\n        <span className=\"Timer__summary\">\n          {description}\n          {dayjs(initialTime).format(\"YYYY/MM/DD HH:MM\")}\n        </span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">Years</span>\n        <span className=\"Timer__value\">{calculateTime.years()}</span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">Months</span>\n        <span className=\"Timer__value\">{calculateTime.months()}</span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">Days</span>\n        <span className=\"Timer__value\">{calculateTime.days()}</span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">Hours</span>\n        <span className=\"Timer__value\">{calculateTime.hours()}</span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">Minutes</span>\n        <span className=\"Timer__value\">{calculateTime.minutes()}</span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">Seconds</span>\n        <span className=\"Timer__value\">{calculateTime.seconds()}</span>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport Timer from \"../../components/timer/Timer\";\n\nimport \"./Toronto.css\";\n\nconst Toronto = () => {\n  return (\n    <div className=\"Toronto\">\n      <header className=\"Toronto__header\">\n        <h1>How long have I been?</h1>\n        <Timer\n          initialTime=\"2021-02-17 16:00:00\"\n          description=\"I arrived to ðŸ‡¨ðŸ‡¦ Toronto on \"\n        />\n      </header>\n    </div>\n  );\n};\n\nexport default Toronto;\n","import React from \"react\";\n\nimport Timer from \"../../components/timer/Timer\";\n\nimport \"./Churrita.css\";\n\nconst Churrita = () => {\n  return (\n    <div className=\"Churrita\">\n      <header className=\"Churrita__header\">\n        <h1>How much time left?</h1>\n        <Timer\n          initialTime=\"2022-03-01 16:00:00\"\n          description=\"You will arrive to ðŸ‡¨ðŸ‡¦ Toronto on \"\n          isCountdown\n        />\n      </header>\n    </div>\n  );\n};\n\nexport default Churrita;\n","import { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Toronto from \"./toronto/Toronto\";\nimport Churrita from \"./churrita/Churrita\";\n\nconst App = () => {\n  const history = useHistory();\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/churrita\" component={Churrita}></Route>\n        <Route exact path=\"/toronto\" component={Toronto} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}